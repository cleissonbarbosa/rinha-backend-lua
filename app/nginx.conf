worker_processes auto;
worker_rlimit_nofile 65535;
error_log stderr warn;
pid /var/run/nginx.pid;

events {
    worker_connections 8192;
    use epoll;
    multi_accept on;
}

http {
    lua_package_path "/usr/local/openresty/nginx/lua/?.lua;;";
    lua_shared_dict stats 10m;
    lua_shared_dict health_cache 1m;
    # tune
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout  30s;
    keepalive_requests 10000;
    types_hash_max_size 2048;
    client_body_buffer_size 8k;
    client_header_buffer_size 8k;
    large_client_header_buffers 4 8k;
    reset_timedout_connection on;

    resolver 127.0.0.11 valid=30s;
    
    init_by_lua_file lua/init.lua;
    init_worker_by_lua_block {
        require("payment_processor").start_worker()
        require("health_monitor").start_monitor()
    }

    upstream payment_default {
        server payment-processor-default:8080 max_fails=3 fail_timeout=30s;
    keepalive 256;
    }

    upstream payment_fallback {
        server payment-processor-fallback:8080 max_fails=3 fail_timeout=30s;
    keepalive 256;
    }

    server {
        listen 80 reuseport;
        access_log off;
        
        # Internal proxy endpoints to call Payment Processors with keepalive
        location = /_pp/default/payments {
            internal;
            proxy_pass http://payment_default/payments;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Content-Type "application/json";
            proxy_read_timeout 1500ms;
            proxy_connect_timeout 200ms;
            proxy_send_timeout 1500ms;
        }

        location = /_pp/fallback/payments {
            internal;
            proxy_pass http://payment_fallback/payments;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Content-Type "application/json";
            proxy_read_timeout 1500ms;
            proxy_connect_timeout 200ms;
            proxy_send_timeout 1500ms;
        }

        location = /_pp/default/health {
            internal;
            proxy_pass http://payment_default/payments/service-health;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_read_timeout 1s;
            proxy_connect_timeout 200ms;
            proxy_send_timeout 1s;
        }

        location = /_pp/fallback/health {
            internal;
            proxy_pass http://payment_fallback/payments/service-health;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_read_timeout 1s;
            proxy_connect_timeout 200ms;
            proxy_send_timeout 1s;
        }
        
        location = /payments {
            if ($request_method != POST) {
                return 405;
            }
            # micro-optimizations
            client_body_timeout 2s;
            send_timeout 2s;
            content_by_lua_file lua/payment_handler.lua;
        }
        
        location = /payments-summary {
            if ($request_method != GET) {
                return 405;
            }
            send_timeout 2s;
            content_by_lua_file lua/summary_handler.lua;
        }
        
        location = /purge-payments {
            if ($request_method != POST) {
                return 405;
            }
            client_body_timeout 2s;
            send_timeout 2s;
            content_by_lua_file lua/purge_handler.lua;
        }
        
        location = /health {
            content_by_lua_block {
                ngx.say("OK")
            }
        }
    }
}
