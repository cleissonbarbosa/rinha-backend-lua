user root;
worker_processes 1;
error_log logs/error.log warn;
pid logs/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    lua_package_path "/home/runner/workspace/app/lua/?.lua;;";
    lua_shared_dict stats 10m;
    lua_shared_dict health_cache 1m;
    
    init_by_lua_file /home/runner/workspace/app/lua/init.lua;
    init_worker_by_lua_block {
        require("payment_processor").start_worker()
        require("health_monitor").start_monitor()
    }

    upstream payment_default {
        server localhost:8080 max_fails=3 fail_timeout=30s;
        keepalive 8;
    }

    upstream payment_fallback {
        server localhost:8081 max_fails=3 fail_timeout=30s;
        keepalive 8;
    }

    server {
        listen 8001;
        access_log off;
        
        location = /payments {
            if ($request_method != POST) {
                return 405;
            }
            content_by_lua_file /home/runner/workspace/app/lua/payment_handler.lua;
        }
        
        location = /payments-summary {
            if ($request_method != GET) {
                return 405;
            }
            content_by_lua_file /home/runner/workspace/app/lua/summary_handler.lua;
        }
        
        location = /health {
            content_by_lua_block {
                ngx.say("OK")
            }
        }
    }
}